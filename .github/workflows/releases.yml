name: "Release version management"

on:
  push:
    tags:
      - releases-v1*

jobs:
  docker:
    name: releases-by-docker
    runs-on: ubuntu-20.04

    steps:
      ################################################################
      # Git checkout
      - name: Checkout repository
        uses: actions/checkout@v2

      # Generate variables like:
      #   SRS_DROPLET_EIP=1.2.3.4
      - name: Build droplet variables
        run: |
          SRS_DROPLET_EIP=$(dig +short lh.ossrs.net)
          echo "SRS_DROPLET_EIP=$SRS_DROPLET_EIP" >> $GITHUB_ENV

      ################################################################
      # Build
      # The github.ref is, for example, refs/tags/v1.0.52
      # Generate variables like:
      #   SRS_TAG=releases-v1.0.52
      #   SRS_MAJOR=releases-1
      # @see https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
      - name: Generate varaiables
        run: |
          SRS_TAG=$(echo ${{ github.ref }}| awk -F '/' '{print $3}')
          echo "SRS_TAG=$SRS_TAG" >> $GITHUB_ENV
          SRS_MAJOR=$(echo $SRS_TAG| awk -F '.' '{print $1}' |sed 's/-v/-/g')
          echo "SRS_MAJOR=$SRS_MAJOR" >> $GITHUB_ENV
      # Build SRS image
      - name: Build SRS docker image
        run: |
          echo "Release ossrs/srs-cloud:$SRS_TAG"
          docker build --tag ossrs/srs-cloud:$SRS_TAG -f releases/Dockerfile .

      ################################################################
      # Aliyun ACR
      - name: Login Aliyun docker hub
        uses: aliyun/acr-login@v1
        with:
          login-server: https://registry.cn-hangzhou.aliyuncs.com
          username: "${{ secrets.ACR_USERNAME }}"
          password: "${{ secrets.ACR_PASSWORD }}"
      - name: Push to Aliyun docker hub
        run: |
          docker tag ossrs/srs-cloud:$SRS_TAG registry.cn-hangzhou.aliyuncs.com/ossrs/srs-cloud:$SRS_TAG
          docker tag ossrs/srs-cloud:$SRS_TAG registry.cn-hangzhou.aliyuncs.com/ossrs/srs-cloud:$SRS_MAJOR
          docker push --all-tags registry.cn-hangzhou.aliyuncs.com/ossrs/srs-cloud
          echo "Alias srs-cloud to srs-terraform"
          docker tag ossrs/srs-cloud:$SRS_TAG registry.cn-hangzhou.aliyuncs.com/ossrs/srs-terraform:$SRS_TAG
          docker tag ossrs/srs-cloud:$SRS_TAG registry.cn-hangzhou.aliyuncs.com/ossrs/srs-terraform:$SRS_MAJOR
          docker push --all-tags registry.cn-hangzhou.aliyuncs.com/ossrs/srs-terraform
          echo "Release ok, please see:"
          echo "  https://cr.console.aliyun.com/repository/cn-hangzhou/ossrs/srs-cloud/images"
          echo "  https://cr.console.aliyun.com/repository/cn-hangzhou/ossrs/srs-terraform/images"

      ################################################################
      # K8S
      - name: Setup KUBECONFIG for Aliyun ACK
        run: |-
          KUBECONFIG=$RUNNER_TEMP/kubeconfig_$(date +%s)
          echo "${{ secrets.KUBECONFIG }}" > $KUBECONFIG
          echo "KUBECONFIG=$KUBECONFIG" >> $GITHUB_ENV
      # K8S for terraform versions
      - name: Release terraform versions to Aliyun ACK
        run: |-
          STABLE_RELEASE=platform-$(cat releases/releases.js |grep 'const latest' |awk -F "'" '{print $2}')
          echo "Check stable release $STABLE_RELEASE"

          while true; do
            docker pull registry.cn-hangzhou.aliyuncs.com/ossrs/srs-cloud:$STABLE_RELEASE >/dev/null 2>&1 && echo "done" && break
            echo "Image $STABLE_RELEASE not ready, wait..." && sleep 5
          done

          echo "Image is ready, lets update the releases."

      ################################################################
      # Execute command in a ssh, because ufw limit the rate.
      - name: Restart the containers
        env:
          SEARCH_APIKEY: ${{ secrets.SEARCH_APIKEY }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SRS_DROPLET_EIP }}
          username: root
          key: ${{ secrets.DIGITALOCEAN_SSHKEY }}
          port: 22
          envs: SRS_TAG,SRS_MAJOR
          timeout: 60s
          command_timeout: 30m
          script: |
            #
            #ufw allow 8101
            #
            export SRS_DROPLET_PIP=$(ifconfig eth0 |grep 'inet ' |awk '{print $2}')
            echo "SRS_DROPLET_PIP=$SRS_DROPLET_PIP"
            #
            # Restart srs-cloud releases
            for ((i=0; i < 5; i++)); do
              if [[ $(docker ps -f name=docs-cloudversion |wc -l) -eq 1 ]]; then echo "Killed"; break; fi;
              docker rm -f docs-cloudversion; sleep 0.3;
            done
            docker run -d -it --restart always --name docs-cloudversion -p 8101:9000 \
              registry.cn-hangzhou.aliyuncs.com/ossrs/srs-cloud:$SRS_TAG
