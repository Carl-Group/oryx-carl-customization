#!/usr/bin/env bash

REALPATH=$(realpath $0)
WORK_DIR=$(cd $(dirname $REALPATH)/.. && pwd)
echo "Run pub at $WORK_DIR from $0"
cd $WORK_DIR

# Automatic renew the HTTPS by let's encrypt.

if [[ ! -d /usr/local/srs-terraform && $(uname -s) == 'Darwin' ]]; then
  echo "Directly finish renew for macOS development"
  sleep 3; exit 0;
fi

LIVE_DOMAINS=$(ls -d $WORK_DIR/etc/letsencrypt/live/*/ |wc -l)
if [[ $LIVE_DOMAINS -eq 0 ]]; then echo "No domains in $WORK_DIR/etc/letsencrypt/live/"; exit 0; fi

# See https://github.com/ossrs/srs/issues/2864#issuecomment-1027944527
# Use --force-renewal to always renew a cert.
# We run always with "-n Run non-interactively"
# Note that it's started by nodejs, so never use '-it' or failed for 'the input device is not a TTY'.
rm -f $WORK_DIR/var/log/letsencrypt/CERTBOT_HOOK_RELOAD_NGINX
docker run --rm --name certbot-renew \
  -v "$WORK_DIR/etc/letsencrypt:/etc/letsencrypt" \
  -v "$WORK_DIR/var/lib/letsencrypt:/var/lib/letsencrypt" \
  -v "$WORK_DIR/var/log/letsencrypt:/var/log/letsencrypt" \
  ccr.ccs.tencentyun.com/ossrs/certbot renew \
  --post-hook "touch /var/log/letsencrypt/CERTBOT_HOOK_RELOAD_NGINX" \
  -n

if [[ -f $WORK_DIR/var/log/letsencrypt/CERTBOT_HOOK_RELOAD_NGINX ]]; then
  echo "Reload nginx for cert updated"
  systemctl reload nginx.service
fi
